% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygenic_test.R
\name{PolyTest}
\alias{PolyTest}
\title{Test for evidence of polygenic selection}
\usage{
PolyTest(DAFs, pvalues, quantiles, allele_ages_quantiles)
}
\arguments{
\item{DAFs}{1d array. Derived allele frequencies of trait associations}

\item{pvalues}{1d array. Selection pvalues of trait associations}

\item{quantiles}{data frame. Obtained from PolyTest_Init.}

\item{allele_ages_quantiles}{List of data tables. Obtained from PolyTest_Init.}
}
\value{
Returns a pvalue.
}
\description{
Tests for evidence of polygenic selection by matching SNPs by DAF and using a one-sided Wilcoxon rank sum test.
}
\examples{
PolyTest(DAFs, pvalues, quantiles, allele_ages_quantiles)

# Example analysis:
# read files
mut         <- read.mut("./inst/extdata/example.mut.gz")
sele        <- read.sele("./inst/extdata/example.sele.gz")
freq        <- read.freq("./inst/extdata/example.freq.gz")
qual        <- read.qual("./inst/extdata/example.qual.gz")

# Obtain allele_ages data table
allele_ages <- get.allele_ages(mut, freq, sele)
allele_ages <- Filter(allele_ages, qual)

######### Polygenic selection test #########

# Initialise
quant       <- PolyTest_Init(allele_ages)

# Make a fake polygenic trait
df          <- allele_ages[!is.na(allele_ages$pvalue),]
df          <- df[df$pvalue < 0,]
df          <- df[sample(1:nrow(df), 50, replace = F),]

# Run polygenic test
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)

}
