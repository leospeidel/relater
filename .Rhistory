head(m)
head(haps)
m <- get_hap_matrix(haps[,1:7])
?get_hap_matrix
m <- get_hap_matrix(haps[,1:7])
View(get_hap_matrix)
View(get_hap_matrix)
View(get_hap_matrix)
View(get_hap_matrix)
haps <- read.haps("inst/extdata/example.haps.gz")
devtools::load_all(".")
haps <- read.haps("inst/extdata/example.haps.gz")
m <- get_hap_matrix(haps)
devtools::load_all(".")
m <- get_hap_matrix(haps)
m <- get_hap_matrix(haps[,1:5])
m <- get_hap_matrix(haps[,1:6])
haps[,6] <- 2
m <- get_hap_matrix(haps[,1:6])
devtools::load_all(".")
m <- get_hap_matrix(haps[,1:6])
devtools::load_all(".")
?read.mut
mut <- read.mut("./inst/extdata/example.mut.gz")
head(mut)
devtools::load_all(".")
mut <- read.mut("./inst/extdata/example.mut.gz")
head(mut)
devtools::load_all(".")
head(mut)
mut <- read.mut("./inst/extdata/example.mut.gz")
devtools::load_all(".")
mut <- read.mut("./inst/extdata/example.mut.gz")
head(mut)
devtools::load_all(".")
mut <- read.mut("./inst/extdata/example.mut.gz")
source('~/Documents/genomics/relater/R/basics_parse.R')
devtools::load_all(".")
mut <- read.mut("./inst/extdata/example.mut.gz")
devtools::load_all(".")
mut <- read.mut("./inst/extdata/example.mut.gz")
remove(read.mut)
devtools::load_all(".")
mut <- read.mut("./inst/extdata/example.mut.gz")
??relater
devtools::load_all(".")
coal <- read.coal("./inst/extdata/example.coal.gz")
system("head ./inst/extdata/example.coal.gz")
system("zcat ./inst/extdata/example.coal.gz | head")
system("gzip -c ./inst/extdata/example.coal.gz | head")
system("gunzip -c ./inst/extdata/example.coal.gz | head")
array(1:3, c(2,4))
array(1:3, c(2,4,2))
usethis::use_package("reshape2")
devtools::load_all(".")
read.coal("inst/extdata/example.coal.gz")
devtools::load_all(".")
read.coal("inst/extdata/example.coal.gz")
devtools::load_all(".")
read.coal("inst/extdata/example.coal.gz")
filename <- "inst/extdata/example.coal.gz"
groups <- as.matrix(read.table(filename, nrow = 1))
groups
epochs <- as.matrix(read.table(filename, nrow = 1, skip = 1))
coal   <- read.table(filename, skip = 2)
head(coal)
head(coal[,1:2])
head(groups[coal[,1:2]])
head(groups[as.matrix(coal[,1:2])])
head(groups[as.matrix(coal[,1:2]+1)])
as.matrix(coal[,1:2]+1)
head(groups[as.matrix(coal[,1:2]+1)])
groups[as.matrix(coal[,1:2]+1)]
groups[as.matrix(coal[,1:2])+1]
groups[c(1,1)]
groups[as.matrix(coal[,1]+1)]
epochs <- as.matrix(read.table(filename, nrow = 1, skip = 1))
groups <- as.matrix(read.table(filename, nrow = 1))
groups
epochs
coal   <- read.table(filename, skip = 2)
head(coal)
groups[coal[,1:2]+1]
coal[,1:2]+1
as.matrix(coal[,1:2]+1)
groups[as.matrix(coal[,1:2]+1)]
as.matrix(coal[,1:2]+1)
groups
groups[1]
groups[2]
as.matrix(coal[,1]+1)
groups[as.matrix(coal[,1]+1)]
devtools::load_all(".")
coal <- read.coal(filename)
head(coal)
coal[order(paste(coal[,1:2]))]
coal[order(paste(coal[,1:2])),]
paste(coal[,1:2])
head(coal)
head(coal[,1:2])
head(as.matrix(coal[,1:2])
)
head(as.matrix(coal[,1:2]))
head(paste(as.matrix(coal[,1:2]))
head(paste(as.matrix(coal[,1:2])))
head(paste(as.matrix(coal[,1:2]), collapse = ""))
coal[,1:2]
coal[1,1:2]
paste(coal[,1:2])
paste(coal[,1:2], collapse = "")
paste(as.matrix(coal[,1:2]), collapse = "")
paste(as.matrix(coal[1,1:2]), collapse = "")
head(coal)
paste(coal[,1], coal[,2], sep = "")
devtools::load_all(".")
coal <- read.coal(filename)
head(coal)
devtools::load_all(".")
rate <- read.rate("inst/extdata/example_avg.rate.gz")
devtools::load_all(".")
rate <- read.rate("inst/extdata/example_avg.rate.gz")
devtools::load_all(".")
rate <- read.rate("inst/extdata/example_avg.rate.gz")
rate <- read.avg_rate("inst/extdata/example_avg.rate.gz")
rate
devtools::load_all(".")
rate
devtools::load_all(".")
rate
devtools::load_all(".")
rate <- read.avg_rate("inst/extdata/example_avg.rate.gz")
head(rate)
rate
coal
devtools::load_all(".")
sele <- read.sele("./inst/extdata/example.sele.gz")
head(sele)
devtools::load_all(".")
sele <- read.sele("./inst/extdata/example.sele.gz")
head(sele)
devtools::load_all(".")
freq <- read.freq("inst/extdata/example.freq.gz")
head(freq)
devtools::load_all(".")
freq <- read.freq("inst/extdata/example.freq.gz")
freq
devtools::load_all(".")
freq <- read.freq("inst/extdata/example.freq.gz")
lin <- read.lin("inst/extdata/example.lin.gz")
head(lin)
devtools::load_all(".")
lin <- read.lin("inst/extdata/example.lin.gz")
head(lin)
head(lin)
freq
freq[,-c(1:2)]/lin[,-c(1:2)]
freq[,-c(1:2,-ncol(freq))]/lin[,-c(1:2)]
head(freq)
freq[,-c(1:2,ncol(freq))]/lin[,-c(1:2)]
freq[,-c(1:2,ncol(freq)-1,ncol(freq))]/lin[,-c(1:2,ncol(lin))]
freq[,-c(1:2,ncol(freq)-1,ncol(freq))]/lin[,-c(1:2,ncol(lin))]
?read.sele
mut <- read.mut("./inst/extdata/example.mut.gz")
head(mut)
head(sele)
head(freq)
head(mut)
devtools::load_all(".")
get.allele_ages(mut, freq, sele)
devtools::load_all(".")
get.allele_ages(mut, freq, sele)
devtools::load_all(".")
get.allele_ages(mut, freq, sele)
?get.allele_ages
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?read.sele
devtools::load_all(".")
?read.sele
?read.mut
devtools::load_all(".")
devtools::load_all(".")
mut <- read.mut("inst/extdata/example.mut.gz", CHR = 1)
devtools::load_all(".")
mut <- read.mut("inst/extdata/example.mut.gz", CHR = 1)
devtools::load_all(".")
devtools::load_all(".")
mut <- read.mut("inst/extdata/example.mut.gz", CHR = 1)
head(mut)
sele <- read.mut("inst/extdata/example.sele.gz", CHR = 1)
sele <- read.sele("inst/extdata/example.sele.gz", CHR = 1)
freq <- read.sele("inst/extdata/example.freq.gz", CHR = 1)
allele_ages <- get.allele_ages(mut, freq, age)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, age)
allele_ages <- get.allele_ages(mut, freq, age)
head(mut)
head(sele)
allele_ages <- get.allele_ages(mut, freq, age)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, age)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, age)
allele_ages <- get.allele_ages(mut, freq, age)
allele_ages <- get.allele_ages(mut, freq, age)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, age)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, age)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, age)
any(colnames(mut) == "CHR")
any(colnames(freq) == "CHR")
any(colnames(sele) == "CHR")
any(colnames(mut) == "CHR") & any(colnames(freq) == "CHR") & any(colnames(sele) == "CHR")
if( any(colnames(mut) == "CHR") & any(colnames(freq) == "CHR") & any(colnames(sele) == "CHR") ){
print("hello2")
}
allele_ages <- get.allele_ages(mut, freq, age)
head(mut)
if(any(colnames(mut) == "upstream")){
mut <- mut[,c("CHR","pos_of_snp", "rs-id", "age_begin", "age_end", "ancestral_allele/alternative_allele", "upstream", "downstream")]
colnames(mut) <- c("CHR","BP", "ID", "lower_age", "upper_age", "ancestral/derived", "upstream", "downstream")
}else{
mut <- mut[,c("CHR","pos_of_snp", "rs-id", "age_begin", "age_end", "ancestral_allele/alternative_allele")]
colnames(mut) <- c("CHR","BP", "ID", "lower_age", "upper_age", "ancestral/derived")
}
sele <- sele[,c("CHR","pos", "when_mutation_has_freq2")]
colnames(sele) <- c("CHR","BP", "pvalue")
freq <- freq[,c("CHR","pos", "TreeFreq")]
colnames(freq) <- c("CHR","BP", "DAF")
allele_ages <- merge(mut, freq, by = c("CHR","BP"), all.x = T)
allele_ages <- merge(allele_ages, sele, by = c("CHR","BP"), all.x = T)
allele_ages$pvalue[allele_ages$pvalue == 1.0] <- NA
head(allele_ages)
devtools::load_all(".")
allele_ages$pvalue[allele_ages$pvalue == 1.0] <- NA
mut <- read.mut("./inst/extdata/example.mut.gz", CHR = 1)
sele <- read.mut("./inst/extdata/example.sele.gz", CHR = 1)
freq <- read.mut("./inst/extdata/example.freq.gz", CHR = 1)
get.allele_ages(mut, freq, sele)
head(sele)
sele <- read.sele("inst/extdata/example.sele.gz")
sele <- read.freq("inst/extdata/example.freq.gz")
sele <- read.sele("inst/extdata/example.sele.gz")
freq <- read.freq("inst/extdata/example.freq.gz")
get.allele_ages(mut, freq, sele)
freq <- read.freq("inst/extdata/example.freq.gz", CHR = 1)
sele <- read.sele("inst/extdata/example.sele.gz", CHR = 1)
get.allele_ages(mut, freq, sele)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, sele)
head(allele_ages)
range(allele_ages$pvalue)
range(allele_ages$pvalue, na.rm = T)
dim(allele_ages)
hist(10^allele_ages$pvalue)
qual <- read.qual("inst/extdata/example.qual.gz")
head(qual)
qual <- read.qual("inst/extdata/example.qual.gz", CHR = 1)
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
qual <- read.qual("inst/extdata/example.qual.gz", CHR = 1)
head(qual)
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
head(foo)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
head(foo)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
head(allele_ages)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, sele)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- get.allele_ages(mut, freq, sele)
head(allele_ages)
head(qual)
head(allele_ages)
allele_ages <- subset(allele_ages, frac_branches_with_snp >= threshold[1] & num_snps_on_tree >= threshold[2])
allele_ages <- merge(allele_ages, qual[,c(colnames(qual) != "ID")], by = c("CHR", "BP"))
which(colnames(allele_ages) %in% c("frac_branches_with_snp", "num_snps_on_tree", "fraction_snps_not_mapping"))
allele_ages[,-which(colnames(allele_ages) %in% c("frac_branches_with_snp", "num_snps_on_tree", "fraction_snps_not_mapping"))]
head(allele_ages)
devtools::load_all(".")
allele_ages <- get.allele_ages(mut, freq, sele)
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
allele_ages[,-c(9:11)]
head(allele_ages)
allele_ages[,-c(57)]
allele_ages[,-c(5:7)]
allele_ages[,-c(which(colnames(allele_ages) == "CHR"))]
allele_ages[,-which(colnames(allele_ages) == "CHR")]
allele_ages[,which(colnames(allele_ages) == "CHR")]
allele_ages[,..which(colnames(allele_ages) == "CHR")]
allele_ages[,..colnames(allele_ages)[which(colnames(allele_ages) == "CHR")]
]
allele_ages[,..colnames(allele_ages)[which(colnames(allele_ages) == "CHR")]]
allele_ages[,.. colnames(allele_ages)[which(colnames(allele_ages) == "CHR")]]
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
devtools::load_all(".")
foo <- Filter(allele_ages, qual)
head(foo)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- get.allele_ages(mut, freq, sele)
foo <- Filter(allele_ages, qual)
foo <- Filter(allele_ages, qual)
foo <- Filter(allele_ages, qual)
foo <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
allele_ages <- Filter(allele_ages, qual)
devtools::load_all(".")
allele_ages <- Filter(allele_ages, qual)
?Filter
?get.allele_ages
devtools::load_all(".")
devtools::load_all(".")
?PolyTest_Init
devtools::load_all(".")
?PolyTest_Init
?PolyTest_Init
?PolyTest_ResampleSNPs
?PolyTest
head(allele_ages)
mut <- read.mut("./inst/extdata/example.mut.gz")
sele <- read.sele("./inst/extdata/example.sele.gz")
freq <- read.freq("./inst/extdata/example.freq.gz")
allele_ages <- get.allele_ages(mut, freq, sele)
allele_ages <- Filter(allele_ages)
mut  <- read.mut("./inst/extdata/example.mut.gz")
sele <- read.sele("./inst/extdata/example.sele.gz")
freq <- read.freq("./inst/extdata/example.freq.gz")
qual <- read.qual("./inst/extdata/example.qual.gz")
allele_ages <- get.allele_ages(mut, freq, sele)
allele_ages <- Filter(allele_ages, qual)
quant       <- PolyTest_Init(allele_ages)
devtools::load_all(".")
quant       <- PolyTest_Init(allele_ages)
PolyTest_ResampleSNPs(10, quant$quantiles, quant$allele_ages_quantiles)
devtools::load_all(".")
PolyTest_ResampleSNPs(10, quant$quantiles, quant$allele_ages_quantiles)
length(PolyTest_ResampleSNPs(10, quant$quantiles, quant$allele_ages_quantiles))
devtools::load_all(".")
devtools::load_all(".")
length(PolyTest_ResampleSNPs(10, quant$quantiles, quant$allele_ages_quantiles))
PolyTest_ResampleSNPs(10, quant$quantiles, quant$allele_ages_quantiles)
df <- allele_ages[!is.na(allele_ages$pvalue),]
df <- df[df$pvalue < 0,]
df <- df[sample(1:nrow(df), 50, replace = F),]
dim(df)
head(df)
head(allele_ages)
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
devtools::load_all(".")
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
devtools::load_all(".")
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
devtools::load_all(".")
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
devtools::load_all(".")
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
head(quant$quantiles)
head(quant$allele_ages_quantiles)
str(quant$allele_ages_quantiles)
head(quant$allele_ages_quantiles)
devtools::load_all(".")
?PolyTest
?PolyTest
?PolyTest
devtools::load_all(".")
ls("package:relater")
?fread
any(allele_ages$pvalue == 0)
any(allele_ages$pvalue == 0, na.rm = T)
devtools::install_github("leospeidel/relater")
?PolyTest
devtools::load_all(".")
devtools::load_all(".")
library(relater)
?split
devtools::add_packages()
devtools::remove_packages()
devtools::check()
?wilcox.test()
?read.table
devtools::check()
?quantile
devtools::check()
devtools::install()
devtools::check()
?split
?data.table::split
devtools::install()
library(relater)
devtools::install()
read.mut()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(relater)
system.file(package = allele_ages <- get.allele_ages(mut, freq, sele)
allele_ages <- filter.allele_ages(allele_ages, qual)
######### Polygenic selection test #########
# Initialise
quant       <- PolyTest_Init(allele_ages)
# Make a fake polygenic trait
df          <- allele_ages[!is.na(allele_ages$pvalue),]
df          <- df[df$pvalue < 0,]
df          <- df[sample(1:nrow(df), 50, replace = F),]
# Run polygenic test
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles))
allele_ages <- get.allele_ages(mut, freq, sele)
allele_ages <- filter.allele_ages(allele_ages, qual)
######### Polygenic selection test #########
# Initialise
quant       <- PolyTest_Init(allele_ages)
# Make a fake polygenic trait
df          <- allele_ages[!is.na(allele_ages$pvalue),]
df          <- df[df$pvalue < 0,]
df          <- df[sample(1:nrow(df), 50, replace = F),]
# Run polygenic test
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
# read files
mut         <- read.mut("./inst/extdata/example.mut.gz", CHR = 1)
sele        <- read.sele("./inst/extdata/example.sele.gz", CHR = 1)
freq        <- read.freq("./inst/extdata/example.freq.gz", CHR = 1)
qual        <- read.qual("./inst/extdata/example.qual.gz", CHR = 1)
# Obtain allele_ages data table
allele_ages <- get.allele_ages(mut, freq, sele)
allele_ages <- filter.allele_ages(allele_ages, qual)
######### Polygenic selection test #########
# Initialise
quant       <- PolyTest_Init(allele_ages)
# Make a fake polygenic trait
df          <- allele_ages[!is.na(allele_ages$pvalue),]
df          <- df[df$pvalue < 0,]
df          <- df[sample(1:nrow(df), 50, replace = F),]
# Run polygenic test
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
# Make a fake polygenic trait
df          <- allele_ages[!is.na(allele_ages$pvalue),]
df          <- df[df$pvalue < 0,]
df          <- df[sample(1:nrow(df), 50, replace = F),]
# Run polygenic test
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
# Make a fake polygenic trait
df          <- allele_ages[!is.na(allele_ages$pvalue),]
df          <- df[df$pvalue < 0,]
df          <- df[sample(1:nrow(df), 50, replace = F),]
# Run polygenic test
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
# Make a fake polygenic trait
df          <- allele_ages[!is.na(allele_ages$pvalue),]
df          <- df[df$pvalue < 0,]
df          <- df[sample(1:nrow(df), 50, replace = F),]
# Run polygenic test
PolyTest(df$DAF, df$pvalue, quant$quantiles, quant$allele_ages_quantiles)
read.haps()
read.poplabels("./inst/extdata/example.poplabels.gz")
read.coal("./inst/extdata/example.poplabels.gz")
read.coal("./inst/extdata/example.coal.gz")
read.haps("./inst/extdata/example.haps.gz")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
